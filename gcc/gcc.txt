编译过程:
  1、预处理:
    gcc -E 源文件
    生成 源文件.i
  2、编译
    gcc -S 源文件
    生成 源文件.s
  3、汇编
    gcc -c 源文件
    生成 源文件.o
  4、链接
    gcc -o 源文件 
    生成 可执行文件


编码问题:
  -finput-charset:设置源文件编码
  -fexerc-charset:设置运行时编码

警告与优化选项:
  -Wall:开启所有的警告
  -Wno-警告类型:关闭当前警告
  -O:开启优化级别

多文件编译:

指定头文件搜索路径:
  -I 头文件路径

静态链接库的生成与使用:
  静态链接库名:lib+库名.a
  生成:gcc-ar 选项 链接库名
  使用:
    直接使用:在源文件编译过程中直接跟上链接库名
    命令使用:在源文件编译过程中跟上 -L 链接库路径 -l 去掉lib的库名

动态链接库的生成与使用:
  动态链接库名:lib+库名.dll/.so
  生成:
    直接生成:gcc -o 静态链接库名 -fpic 源文件 shared
  使用:与静态同

  
